cmake_minimum_required(VERSION 4.0)
project(hello_imgui)

# Настройка компилятора для Windows
set(CMAKE_CXX_STANDARD 17)

if (WIN32)
    add_definitions(-DWIN32_LEAN_AND_MEAN)
endif()

# Импорт ImGui (новый способ)
include(FetchContent)

FetchContent_Declare(
    imgui
    GIT_REPOSITORY https://github.com/ocornut/imgui.git
    GIT_TAG docking
)
FetchContent_MakeAvailable(imgui)


# Вручную создаём библиотеку ImGui
add_library(imgui STATIC
    ${imgui_SOURCE_DIR}/imgui.cpp
    ${imgui_SOURCE_DIR}/imgui_demo.cpp
    ${imgui_SOURCE_DIR}/imgui_draw.cpp
    ${imgui_SOURCE_DIR}/imgui_tables.cpp
    ${imgui_SOURCE_DIR}/imgui_widgets.cpp
    ${imgui_SOURCE_DIR}/backends/imgui_impl_glfw.cpp
    ${imgui_SOURCE_DIR}/backends/imgui_impl_opengl3.cpp
)

# Явное указание путей для бэкендов
target_include_directories(imgui PUBLIC
    ${imgui_SOURCE_DIR}
    ${imgui_SOURCE_DIR}/backends
)

# Находим GLFW (установленный через pacman)
find_package(glfw3 REQUIRED)

# Создание исполняемого файла
add_executable(hello_imgui main.cpp)



# Подключение библиотек
target_link_libraries(hello_imgui
    PRIVATE
    imgui
    glfw
    opengl32
)

# Для Windows: копирование DLL GLFW
if(WIN32)
    find_file(GLFW_DLL
        NAMES glfw3.dll
        PATHS ${GLFW_ROOT}/lib-mingw-w64
        REQUIRED
    )
    add_custom_command(TARGET hello_imgui POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy
        "${GLFW_DLL}"
        $<TARGET_FILE_DIR:hello_imgui>
    )
endif()
